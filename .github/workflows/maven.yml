name: Java CI with Maven

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: List TourGuide/libs content
        run: ls -l TourGuide/libs

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install local dependencies (GpsUtil, TripPricer, RewardCentral)
        run: |
          cd TourGuide
          mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar

      - name: Build the project (skip tests)
        run: |
          cd TourGuide
          mvn --batch-mode --update-snapshots clean install -DskipTests

      - name: Upload all build outputs
        uses: actions/upload-artifact@v4
        with:
          name: build-target
          path: TourGuide/target/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: List TourGuide/libs content
        run: ls -l TourGuide/libs

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install local dependencies
        run: |
          cd TourGuide
          mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar

      - name: Run tests and generate Jacoco report
        run: |
          cd TourGuide
          mvn --batch-mode --update-snapshots clean verify -Dtest=!TestPerformance

      - name: Create reports directory
        run: |
          mkdir -p reports/surefire
          mkdir -p reports/surefire-reports
          cp TourGuide/target/surefire-reports/* reports/surefire/ || true
          cp -r TourGuide/target/reports/* reports/surefire-reports/ || true

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports

      - name: Upload Jacoco report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: TourGuide/target/site/jacoco/

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: List TourGuide/libs content
        run: ls -l TourGuide/libs

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install local dependencies
        run: |
          cd TourGuide
          mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-target
          path: TourGuide/target/

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          cd TourGuide
          mvn sonar:sonar \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN
